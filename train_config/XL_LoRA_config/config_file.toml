[sdxl_arguments]
cache_text_encoder_outputs = true
no_half_vae = true
min_timestep = 0
max_timestep = 1000
shuffle_caption = false

[model_arguments]
pretrained_model_name_or_path = "/本地路径/SDXL模型"

[dataset_arguments]
debug_dataset = false
in_json = "/本地路径/数据集路径/meta_lat.json"
train_data_dir = "/本地路径/数据集路径"
dataset_repeats = 1
keep_tokens = 0
resolution = "1024,1024"
color_aug = false
token_warmup_min = 1
token_warmup_step = 0

[training_arguments]
output_dir = "/本地路径/SDXL-Train/outputs/LoRA"
output_name = "sdxl_lora"
save_precision = "fp16"
save_every_n_epochs = 1 #模型保存率
train_batch_size = 4 #train_batch_size即为训练时的batch size
max_token_length = 225
mem_eff_attn = false
sdpa = true
xformers = false
max_train_epochs = 10 #训练的次数
max_data_loader_n_workers = 8
persistent_data_loader_workers = true
gradient_checkpointing = true
gradient_accumulation_steps = 1
mixed_precision = "fp16"

[logging_arguments]
log_with = "tensorboard"
logging_dir = "/logs"
log_prefix = "sdxl_lora"

[sample_prompt_arguments]
sample_every_n_epochs = 1 #提示词使用频率
sample_sampler = "euler_a" #采样方法

[saving_arguments]
save_model_as = "safetensors"

[optimizer_arguments]
optimizer_type = "AdaFactor"
learning_rate = 1e-5 # 训练SDXL_LoRA时，学习率可以调的大一些，一般比SDXL全参微调的学习率大10倍左右，比如learning_rate = 1e-5
max_grad_norm = 0
optimizer_args = [ "scale_parameter=False", "relative_step=False", "warmup_init=False",]
lr_scheduler = "constant_with_warmup"
lr_warmup_steps = 100

[additional_network_arguments]
no_metadata = false
network_module = "networks.lora" #选择训练的LoRA模型结构，可以从["networks.lora", "networks.dylora", "lycoris.kohya"]中选择，最常用的LoRA结构默认选择"networks.lora"。
network_dim = 32 #设置LoRA的RANK，设置的数值越大表示表现力越强，但同时需要更多的显存和时间来训练。
network_alpha = 16 #设置缩放权重，用于防止下溢并稳定训练的alpha值。
network_args = [ "conv_dim=32", "conv_alpha=16",]  #设置卷积的Rank与缩放权重。
network_train_unet_only = true

[advanced_training_config]
